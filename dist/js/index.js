(()=>{"use strict";function e(e){return Object.keys(e).reduce(((n,t)=>{const r=e[t];return null!=r?`${n}${l=t,l.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}:${r};`:n;var l}),"")}function n({linkText:n,href:t}){const r=e({padding:"0.25rem 1rem"});return`\n    <a href="${t}" style="${e({color:"#ffffff",whiteSpace:"nowrap"})}">\n      <li \n        onmouseover="(${e=>{e.style.backgroundColor="#424242"}})(this)" \n        onmouseout="(${e=>{e.style.backgroundColor=""}})(this)" \n        style="${r}"\n      >\n        ${n}\n      </li>\n    </a>\n  `}function t(){return"\n    <h1>My Day</h1>\n  "}function r(){return"\n    <h1>Not Found</h1>\n  "}function l(){let e=[{path:"/",view:t}].map((e=>(e.path="/theOdinProject-Todo-List"+e.path,e))).map((e=>({route:e,result:location.pathname.match(new RegExp("^"+e.path.replace(/\//g,"\\/").replace(/:\w+/g,"(.+)")+"$"))}))).find((e=>null!==e.result));null==e&&(e={route:{path:location.pathname,view:r},result:[location.pathname]});const n=[...e.route.path.matchAll(/:(\w+)/g)].map((e=>e[1])).reduce(((n,t,r)=>n[t]=e.result.slice(1)[r]),{}),l=e.route.path.split("?")[1],o=void 0===l?{}:l.split("&").reduce(((e,n)=>{const[t,r]=n.split("=");return void 0===t||void 0===r?e:e[t]=decodeURIComponent(r.replace(/\+/g," "))}),{}),a=e.route.view({pathParams:n,queryParams:o});document.getElementById("app").innerHTML=a}document.getElementById("root").innerHTML=function(){const t=e({height:"100%",display:"flex"}),r=e({flex:"85%"});return`\n    <div style="${t}">\n      ${function(){const t=e({flex:"15%",backgroundColor:"#0093E9",backgroundImage:"linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)"}),r=e({display:"flex",flexDirection:"column",gap:"1rem",padding:"1rem 0rem"}),l=e({padding:"0rem 1rem",fontSize:"1.15rem",color:"#ffffff",fontWeight:"bold"}),o=e({display:"flex",flexDirection:"column"});return`\n    <aside style="${t}">\n      <nav style="${r}">\n        <ul style="${o}">\n          ${[{linkText:"My Day",href:"#"},{linkText:"Next 7 Days",href:"#"},{linkText:"All my tasks",href:"#"}].map((e=>n({linkText:e.linkText,href:e.href}))).join("")}\n        </ul>\n        <div>\n          <div style="${l}">My lists</div>\n          <ul style="${o}">\n          ${[{linkText:"Inbox",href:"#"}].map((e=>n({linkText:e.linkText,href:e.href}))).join("")}\n          </ul>\n        </div\n      </nav>\n    </aside>`}()}\n      <main id="app" style="${r}"></main>\n    </div>\n  `}(),window.addEventListener("popstate",l),document.body.addEventListener("click",(e=>{var n;e.target.matches("[data-link]")&&(e.preventDefault(),n=e.target.href,history.pushState(null,null,n),l())})),l()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUQsU0FBVSxjQUFlQyxLQUFNLEtBQ2pDLENBQUVELFNBQVUsZUFBZ0JDLEtBQU0sTUFVekJjLEtBQUlvQyxHQUNIcEQsRUFBWSxDQUFFQyxTQUFVbUQsRUFBS25ELFNBQVVDLEtBQU1rRCxFQUFLbEQsU0FFbkRtRCxLQUFLLDREQUdNTCwyQ0FDREcsa0JBZFMsQ0FBQyxDQUFFbEQsU0FBVSxRQUFTQyxLQUFNLE1BZ0IvQ2MsS0FBSW9DLEdBQ0hwRCxFQUFZLENBQUVDLFNBQVVtRCxFQUFLbkQsU0FBVUMsS0FBTWtELEVBQUtsRCxTQUVuRG1ELEtBQUssaUVBS2xCLENLMUVRQyxtQ0FDc0JiLDRCQUc5QixDRGZpQmMsR0FFakJDLE9BQU9DLGlCQUFpQixXQUFZN0MsR0FFcEN1QixTQUFTdUIsS0FBS0QsaUJBQ1osU0FDQ2xELElENkRJLElBQWtCb0QsRUM1RGpCcEQsRUFBRXFELE9BQU9DLFFBQVEsaUJBQ25CdEQsRUFBRXVELGlCRDJEaUJILEVDMURWcEQsRUFBRXFELE9BQU8xRCxLRDJEdEI2RCxRQUFRQyxVQUFVLEtBQU0sS0FBTUwsR0FDOUIvQyxJLElDdkRGQSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kby1saXN0Ly4vc3JjL3V0aWxzL3N0eWxlcy50cyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvLWxpc3QvLi9zcmMvY29tcG9uZW50cy9TaWRlYmFyLnRzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG8tbGlzdC8uL3NyYy92aWV3cy9NeURheS50cyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvLWxpc3QvLi9zcmMvdmlld3MvTm90Rm91bmQudHMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kby1saXN0Ly4vc3JjL3JvdXRlci50cyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvLWxpc3QvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kby1saXN0Ly4vc3JjL2xheW91dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBjYW1lbFRvS2ViYWIoY2FtZWxDYXNlU3RyaW5nOiBzdHJpbmcpIHtcclxuICByZXR1cm4gY2FtZWxDYXNlU3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbmxpbmVTdHlsZXMoc3R5bGVzOiBvYmplY3QpIHtcclxuICByZXR1cm4gT2JqZWN0LmtleXMoc3R5bGVzKS5yZWR1Y2UoKGlubGluZVN0eWxlcywgcHJvcGVydHkpID0+IHtcclxuICAgIGNvbnN0IHZhbHVlID0gc3R5bGVzW3Byb3BlcnR5XTtcclxuXHJcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gYCR7aW5saW5lU3R5bGVzfSR7Y2FtZWxUb0tlYmFiKHByb3BlcnR5KX06JHt2YWx1ZX07YDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gaW5saW5lU3R5bGVzO1xyXG4gIH0sICcnKTtcclxufVxyXG4iLCJpbXBvcnQgeyBpbmxpbmVTdHlsZXMgfSBmcm9tICcuLi91dGlscy9zdHlsZXMnO1xyXG5cclxuZnVuY3Rpb24gTmF2TGlzdEl0ZW0oeyBsaW5rVGV4dCwgaHJlZiB9OiB7IGxpbmtUZXh0OiBzdHJpbmc7IGhyZWY6IHN0cmluZyB9KSB7XHJcbiAgY29uc3QgbmF2TGlzdEl0ZW1TdHlsZXMgPSBpbmxpbmVTdHlsZXMoe1xyXG4gICAgcGFkZGluZzogJzAuMjVyZW0gMXJlbScsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IG5hdkxpc3RJdGVtTW91c2VPdmVyID0gKGU6IEhUTUxFbGVtZW50KSA9PiB7XHJcbiAgICBlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjNDI0MjQyJztcclxuICB9O1xyXG5cclxuICBjb25zdCBuYXZMaXN0SXRlbU1vdXNlT3V0ID0gKGU6IEhUTUxFbGVtZW50KSA9PiB7XHJcbiAgICBlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG5hdkxpbmtTdHlsZXMgPSBpbmxpbmVTdHlsZXMoe1xyXG4gICAgY29sb3I6ICcjZmZmZmZmJyxcclxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gLypodG1sKi8gYFxyXG4gICAgPGEgaHJlZj1cIiR7aHJlZn1cIiBzdHlsZT1cIiR7bmF2TGlua1N0eWxlc31cIj5cclxuICAgICAgPGxpIFxyXG4gICAgICAgIG9ubW91c2VvdmVyPVwiKCR7bmF2TGlzdEl0ZW1Nb3VzZU92ZXJ9KSh0aGlzKVwiIFxyXG4gICAgICAgIG9ubW91c2VvdXQ9XCIoJHtuYXZMaXN0SXRlbU1vdXNlT3V0fSkodGhpcylcIiBcclxuICAgICAgICBzdHlsZT1cIiR7bmF2TGlzdEl0ZW1TdHlsZXN9XCJcclxuICAgICAgPlxyXG4gICAgICAgICR7bGlua1RleHR9XHJcbiAgICAgIDwvbGk+XHJcbiAgICA8L2E+XHJcbiAgYDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2lkZUJhcigpIHtcclxuICBjb25zdCBhc2lkZVN0eWxlcyA9IGlubGluZVN0eWxlcyh7XHJcbiAgICBmbGV4OiAnMTUlJyxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDkzRTknLFxyXG4gICAgYmFja2dyb3VuZEltYWdlOiAnbGluZWFyLWdyYWRpZW50KDE2MGRlZywgIzAwOTNFOSAwJSwgIzgwRDBDNyAxMDAlKScsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IG5hdlN0eWxlcyA9IGlubGluZVN0eWxlcyh7XHJcbiAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcclxuICAgIGdhcDogJzFyZW0nLFxyXG4gICAgcGFkZGluZzogJzFyZW0gMHJlbScsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IG5hdkxpc3RUaXRsZVN0eWxlcyA9IGlubGluZVN0eWxlcyh7XHJcbiAgICBwYWRkaW5nOiAnMHJlbSAxcmVtJyxcclxuICAgIGZvbnRTaXplOiAnMS4xNXJlbScsXHJcbiAgICBjb2xvcjogJyNmZmZmZmYnLFxyXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBuYXZMaXN0U3R5bGVzID0gaW5saW5lU3R5bGVzKHtcclxuICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBwcmltYXJ5TmF2TGlua0l0ZW1zID0gW1xyXG4gICAgeyBsaW5rVGV4dDogJ015IERheScsIGhyZWY6ICcjJyB9LFxyXG4gICAgeyBsaW5rVGV4dDogJ05leHQgNyBEYXlzJywgaHJlZjogJyMnIH0sXHJcbiAgICB7IGxpbmtUZXh0OiAnQWxsIG15IHRhc2tzJywgaHJlZjogJyMnIH0sXHJcbiAgXTtcclxuXHJcbiAgY29uc3Qgc2Vjb25kYXJ5TmF2TGlua0l0ZW1zID0gW3sgbGlua1RleHQ6ICdJbmJveCcsIGhyZWY6ICcjJyB9XTtcclxuXHJcbiAgcmV0dXJuIC8qaHRtbCovIGBcclxuICAgIDxhc2lkZSBzdHlsZT1cIiR7YXNpZGVTdHlsZXN9XCI+XHJcbiAgICAgIDxuYXYgc3R5bGU9XCIke25hdlN0eWxlc31cIj5cclxuICAgICAgICA8dWwgc3R5bGU9XCIke25hdkxpc3RTdHlsZXN9XCI+XHJcbiAgICAgICAgICAke3ByaW1hcnlOYXZMaW5rSXRlbXNcclxuICAgICAgICAgICAgLm1hcChpdGVtID0+XHJcbiAgICAgICAgICAgICAgTmF2TGlzdEl0ZW0oeyBsaW5rVGV4dDogaXRlbS5saW5rVGV4dCwgaHJlZjogaXRlbS5ocmVmIH0pXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLmpvaW4oJycpfVxyXG4gICAgICAgIDwvdWw+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxkaXYgc3R5bGU9XCIke25hdkxpc3RUaXRsZVN0eWxlc31cIj5NeSBsaXN0czwvZGl2PlxyXG4gICAgICAgICAgPHVsIHN0eWxlPVwiJHtuYXZMaXN0U3R5bGVzfVwiPlxyXG4gICAgICAgICAgJHtzZWNvbmRhcnlOYXZMaW5rSXRlbXNcclxuICAgICAgICAgICAgLm1hcChpdGVtID0+XHJcbiAgICAgICAgICAgICAgTmF2TGlzdEl0ZW0oeyBsaW5rVGV4dDogaXRlbS5saW5rVGV4dCwgaHJlZjogaXRlbS5ocmVmIH0pXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLmpvaW4oJycpfVxyXG4gICAgICAgICAgPC91bD5cclxuICAgICAgICA8L2RpdlxyXG4gICAgICA8L25hdj5cclxuICAgIDwvYXNpZGU+YDtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNeURheSgpIHtcclxuICByZXR1cm4gLypodG1sKi8gYFxyXG4gICAgPGgxPk15IERheTwvaDE+XHJcbiAgYDtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOb3RGb3VuZCgpIHtcclxuICByZXR1cm4gLypodG1sKi8gYFxyXG4gICAgPGgxPk5vdCBGb3VuZDwvaDE+XHJcbiAgYDtcclxufVxyXG4iLCJpbXBvcnQgTXlEYXkgZnJvbSAnLi92aWV3cy9NeURheSc7XHJcbmltcG9ydCBOb3RGb3VuZCBmcm9tICcuL3ZpZXdzL05vdEZvdW5kJztcclxuXHJcbnR5cGUgVmlld1Byb3BzID0ge1xyXG4gIHBhdGhQYXJhbXM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XHJcbiAgcXVlcnlQYXJhbXM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XHJcbn07XHJcblxyXG50eXBlIFJvdXRlID0ge1xyXG4gIHBhdGg6IHN0cmluZztcclxuICB2aWV3OiAocHJvcHM6IFZpZXdQcm9wcykgPT4gc3RyaW5nO1xyXG59O1xyXG5cclxudHlwZSBNYXRjaCA9IHtcclxuICByb3V0ZTogUm91dGU7XHJcbiAgcmVzdWx0OiBSZWdFeHBNYXRjaEFycmF5O1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJvdXRlcigpIHtcclxuICBjb25zdCByb3V0ZXM6IFJvdXRlW10gPSBbeyBwYXRoOiAnLycsIHZpZXc6IE15RGF5IH1dLm1hcChyb3V0ZSA9PiB7XHJcbiAgICByb3V0ZS5wYXRoID0gcHJvY2Vzcy5lbnYuQkFTRV9QQVRIICsgcm91dGUucGF0aDtcclxuICAgIHJldHVybiByb3V0ZTtcclxuICB9KTtcclxuXHJcbiAgLy8gbWF0Y2ggcGF0aCBmcm9tIGJlZ2lubmluZyB0byBlbmRcclxuICAvLyBlc2NhcGUgZm9yd2FyZCBzbGFzaGVzXHJcbiAgLy8gcmVwbGFjZSBwYXRoIHBsYWNlaG9sZGVyc1xyXG4gIC8vIHdpdGggY2FwdHVyZSBncm91cHNcclxuICBjb25zdCBtYXRjaGVzOiBNYXRjaFtdID0gcm91dGVzLm1hcChyb3V0ZSA9PiAoe1xyXG4gICAgcm91dGUsXHJcbiAgICByZXN1bHQ6IGxvY2F0aW9uLnBhdGhuYW1lLm1hdGNoKFxyXG4gICAgICBuZXcgUmVnRXhwKFxyXG4gICAgICAgICdeJyArIHJvdXRlLnBhdGgucmVwbGFjZSgvXFwvL2csICdcXFxcLycpLnJlcGxhY2UoLzpcXHcrL2csICcoLispJykgKyAnJCdcclxuICAgICAgKVxyXG4gICAgKSxcclxuICB9KSk7XHJcblxyXG4gIGxldCBtYXRjaCA9IG1hdGNoZXMuZmluZChtYXRjaCA9PiBtYXRjaC5yZXN1bHQgIT09IG51bGwpO1xyXG5cclxuICBpZiAobWF0Y2ggPT09IG51bGwgfHwgbWF0Y2ggPT09IHVuZGVmaW5lZCkge1xyXG4gICAgbWF0Y2ggPSB7XHJcbiAgICAgIHJvdXRlOiB7XHJcbiAgICAgICAgcGF0aDogbG9jYXRpb24ucGF0aG5hbWUsXHJcbiAgICAgICAgdmlldzogTm90Rm91bmQsXHJcbiAgICAgIH0sXHJcbiAgICAgIHJlc3VsdDogW2xvY2F0aW9uLnBhdGhuYW1lXSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBjb25zdCBwYXRoUGFyYW1zID0gWy4uLm1hdGNoLnJvdXRlLnBhdGgubWF0Y2hBbGwoLzooXFx3KykvZyldXHJcbiAgICAubWFwKHJlc3VsdCA9PiByZXN1bHRbMV0pXHJcbiAgICAucmVkdWNlKChwcmV2LCBjdXJyLCBpKSA9PiAocHJldltjdXJyXSA9IG1hdGNoLnJlc3VsdC5zbGljZSgxKVtpXSksIHt9KTtcclxuXHJcbiAgY29uc3QgcXVlcnlTdHJpbmcgPSBtYXRjaC5yb3V0ZS5wYXRoLnNwbGl0KCc/JylbMV07XHJcbiAgY29uc3QgcXVlcnlQYXJhbXMgPVxyXG4gICAgcXVlcnlTdHJpbmcgPT09IHVuZGVmaW5lZFxyXG4gICAgICA/IHt9XHJcbiAgICAgIDogcXVlcnlTdHJpbmcuc3BsaXQoJyYnKS5yZWR1Y2UoKHByZXYsIGN1cnIpID0+IHtcclxuICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGN1cnIuc3BsaXQoJz0nKTtcclxuXHJcbiAgICAgICAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gcHJldjtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICByZXR1cm4gKHByZXZba2V5XSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZS5yZXBsYWNlKC9cXCsvZywgJyAnKSkpO1xyXG4gICAgICAgIH0sIHt9KTtcclxuXHJcbiAgY29uc3QgdmlldyA9IG1hdGNoLnJvdXRlLnZpZXcoeyBwYXRoUGFyYW1zLCBxdWVyeVBhcmFtcyB9KTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykuaW5uZXJIVE1MID0gdmlldztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRlKHVybDogc3RyaW5nKSB7XHJcbiAgaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgdXJsKTtcclxuICByb3V0ZXIoKTtcclxufVxyXG4iLCJpbXBvcnQgTGF5b3V0IGZyb20gJy4vbGF5b3V0JztcclxuaW1wb3J0IHsgbmF2aWdhdGUsIHJvdXRlciB9IGZyb20gJy4vcm91dGVyJztcclxuXHJcbmNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpO1xyXG5yb290LmlubmVySFRNTCA9IExheW91dCgpO1xyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgcm91dGVyKTtcclxuXHJcbmRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcclxuICAnY2xpY2snLFxyXG4gIChlOiBFdmVudCAmIHsgdGFyZ2V0OiBIVE1MQW5jaG9yRWxlbWVudCB9KSA9PiB7XHJcbiAgICBpZiAoZS50YXJnZXQubWF0Y2hlcygnW2RhdGEtbGlua10nKSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIG5hdmlnYXRlKGUudGFyZ2V0LmhyZWYpO1xyXG4gICAgfVxyXG4gIH1cclxuKTtcclxuXHJcbnJvdXRlcigpO1xyXG4iLCJpbXBvcnQgU2lkZUJhciBmcm9tICcuL2NvbXBvbmVudHMvU2lkZWJhcic7XHJcbmltcG9ydCB7IGlubGluZVN0eWxlcyB9IGZyb20gJy4vdXRpbHMvc3R5bGVzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExheW91dCgpIHtcclxuICBjb25zdCBjb250YWluZXJTdHlsZXMgPSBpbmxpbmVTdHlsZXMoe1xyXG4gICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IG1haW5TdHlsZXMgPSBpbmxpbmVTdHlsZXMoe1xyXG4gICAgZmxleDogJzg1JScsXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiAvKmh0bWwqLyBgXHJcbiAgICA8ZGl2IHN0eWxlPVwiJHtjb250YWluZXJTdHlsZXN9XCI+XHJcbiAgICAgICR7U2lkZUJhcigpfVxyXG4gICAgICA8bWFpbiBpZD1cImFwcFwiIHN0eWxlPVwiJHttYWluU3R5bGVzfVwiPjwvbWFpbj5cclxuICAgIDwvZGl2PlxyXG4gIGA7XHJcbn1cclxuIl0sIm5hbWVzIjpbImlubGluZVN0eWxlcyIsInN0eWxlcyIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJwcm9wZXJ0eSIsInZhbHVlIiwiY2FtZWxDYXNlU3RyaW5nIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiTmF2TGlzdEl0ZW0iLCJsaW5rVGV4dCIsImhyZWYiLCJuYXZMaXN0SXRlbVN0eWxlcyIsInBhZGRpbmciLCJjb2xvciIsIndoaXRlU3BhY2UiLCJlIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJNeURheSIsIk5vdEZvdW5kIiwicm91dGVyIiwibWF0Y2giLCJwYXRoIiwidmlldyIsIm1hcCIsInJvdXRlIiwicmVzdWx0IiwibG9jYXRpb24iLCJwYXRobmFtZSIsIlJlZ0V4cCIsImZpbmQiLCJwYXRoUGFyYW1zIiwibWF0Y2hBbGwiLCJwcmV2IiwiY3VyciIsImkiLCJzbGljZSIsInF1ZXJ5U3RyaW5nIiwic3BsaXQiLCJxdWVyeVBhcmFtcyIsInVuZGVmaW5lZCIsImtleSIsImRlY29kZVVSSUNvbXBvbmVudCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJjb250YWluZXJTdHlsZXMiLCJoZWlnaHQiLCJkaXNwbGF5IiwibWFpblN0eWxlcyIsImZsZXgiLCJhc2lkZVN0eWxlcyIsImJhY2tncm91bmRJbWFnZSIsIm5hdlN0eWxlcyIsImZsZXhEaXJlY3Rpb24iLCJnYXAiLCJuYXZMaXN0VGl0bGVTdHlsZXMiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJuYXZMaXN0U3R5bGVzIiwiaXRlbSIsImpvaW4iLCJTaWRlQmFyIiwiTGF5b3V0Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImJvZHkiLCJ1cmwiLCJ0YXJnZXQiLCJtYXRjaGVzIiwicHJldmVudERlZmF1bHQiLCJoaXN0b3J5IiwicHVzaFN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==